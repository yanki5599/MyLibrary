@model MyLibrary.Models.Category

@{
    ViewData["Title"] = "Create";
}

@if (ViewBag.messege != null)
{
    <div id="error" class="alert alert-danger" role="alert">
        @ViewBag.messege
    </div>

   
}
<script type="text/javascript">
    setTimeout(function () {
        var element = document.getElementById('error');
        if (element) {
            element.parentNode.removeChild(element);
        }
    }, 3000);
</script>


<h1>Create</h1>

<h4>Category</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="CategoryName" class="control-label"></label>
                <input asp-for="CategoryName" class="form-control" />
                <span asp-validation-for="CategoryName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

   
        
}
