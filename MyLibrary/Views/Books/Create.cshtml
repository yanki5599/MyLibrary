@model MyLibrary.ViewModels.BooksVM

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Book</h4>
<hr />

@if (ViewBag.errors != null)
{
    <div class="alert alert-danger" role="alert">
        @ViewBag.errors
        <a asp-action="Create" asp-controller="Shelves">add shelf</a>
    </div>

}
<div id="categoryAlert" class="alert alert-warning d-none" role="alert">
    Please add categories first.
    <a asp-action="Create" asp-controller="Categories" >Add a Category</a>
</div>

<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label>Book or set</label>
                <div >

                    <input id="radioSingle" class="radio" type="radio" asp-for="IsSet" name="IsSet" value="false"  />
                    <label for="IsSet">Single</label>
                    <input id="radioSet" class="radio" type="radio" asp-for="IsSet" name="IsSet" value="true"  />
                    <label for="IsSet">Set</label>

                </div>
                <div class="form-group">
                    <label asp-for="CategoryId" class="control-label">Category name</label>
                    <select asp-for="CategoryId" class="form-control" asp-items="ViewBag.CategoryName" id="categorySelect"></select>

                </div>

                <div id="single-book-section" style="@(Model.IsSet ? "display:none" : "display:block")">
                    <div class="form-group">
                        <label asp-for="FirstBook.Name" class="control-label"></label>
                        <input asp-for="FirstBook.Name" class="form-control" />
                        <span asp-validation-for="FirstBook.Name" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="FirstBook.Width" class="control-label"></label>
                        <input asp-for="FirstBook.Width" class="form-control"  />
                        <span asp-validation-for="FirstBook.Width" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="Height" class="control-label"></label>
                        <input asp-for="Height" class="form-control"  />
                        <span asp-validation-for="Height" class="text-danger"></span>
                    </div>
                </div>
            </div>

            <div id="set-book-section" style="@(Model.IsSet ? "display:block" : "display:none")">

                <div class="form-group">
                    <label asp-for="SetOfBooksName" class="control-label"></label>
                    <input asp-for="SetOfBooksName" class="form-control" required />
                    <span asp-validation-for="SetOfBooksName" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Height" class="control-label"></label>
                    <input asp-for="Height" class="form-control" required />
                    <span asp-validation-for="Height" class="text-danger"></span>
                </div>

                <div id="Books-Volumes">
                    <button type="button" id="add-book" class="btn btn-secondary m-4">Add another Volume</button>
                    @if (Model.Books != null && Model.Books.Any())
                    {
                        @for (int i = 0; i < Model.Books.Count; i++)
                        {
                            <div class="book-form mb-3" id="book-form-@i">
                                <h4>Book @i</h4>
                                <div class="form-group">
                                    <label asp-for="Books[i].Name" class="control-label"></label>
                                    <input asp-for="Books[i].Name" class="form-control" />
                                    <span asp-validation-for="Books[i].Name" class="text-danger"></span>
                                </div>
                                <div class="form-group">
                                    <label asp-for="Books[i].Width" class="control-label"></label>
                                    <input asp-for="Books[i].Width" class="form-control" />
                                    <span asp-validation-for="Books[i].Width" class="text-danger"></span>
                                </div>
                                <button type="button" class="btn btn-danger" onclick="removeBookForm(@i)">Remove</button>
                            </div>
                        }}
                </div>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var categorySelect = document.getElementById('categorySelect');
            var alertDiv = document.getElementById('categoryAlert');

            function showAlert() {
                alertDiv.classList.remove('d-none');
                setTimeout(function () {
                    alertDiv.classList.add('d-none');
                }, 3000);
            }

            function checkCategoryList() {
                if (categorySelect && categorySelect.options.length === 0) {
                    showAlert();
                }
            }

            // Check on page load
            checkCategoryList();

            // Show alert on click if empty
            categorySelect.addEventListener('click', function () {
                if (categorySelect.options.length === 0) {
                    showAlert();
                }
            });
        });
    </script>
    <script>

      



        document.querySelectorAll('input[name="IsSet"]').forEach(radio => {
            radio.addEventListener('change', function () {
                if (this.value === 'true') {
                    document.getElementById('single-book-section').style.display = 'none';
                    document.getElementById('set-book-section').style.display = 'block';

                    if (document.getElementById("Books-Volumes").children.length == 1) {
                        document.getElementById('add-book').click();
                    }
                    disableSingleBookInputs();
                } else {
                    document.getElementById('single-book-section').style.display = 'block';
                    document.getElementById('set-book-section').style.display = 'none';
                    enableSingleBookInputs();
                }
            });
        });

        function disableSingleBookInputs() {
            document.querySelectorAll('#single-book-section input, #single-book-section select').forEach(input => {
                input.disabled = true;
            });
        }

        function enableSingleBookInputs() {
            document.querySelectorAll('#single-book-section input, #single-book-section select').forEach(input => {
                input.disabled = false;
            });
        }

        document.getElementById('add-book').addEventListener('click',
            function () {
                var booksContainer = document.getElementById('Books-Volumes');
                var index = booksContainer.children.length - 1; // -1 cuz the button is a child
                var newBookForm = `
                                <div class="book-form mb-3" id="book-form-${index}">
                                    <h4>Book ${index}</h4>
                                    <div class="form-group">
                                        <label for="Books_${index}__Name">Book name</label>
                                        <input required class="form-control" type="text" id="Books_${index}__Name" name="Books[${index}].Name" />
                                        <span class="text-danger" data-valmsg-for="Books[${index}].Name" data-valmsg-replace="true"></span>
                                    </div>
                                    <div class="form-group">
                                        <label for="Books_${index}__Width">Book width</label>
                                        <input  required class="form-control" type="number" id="Books_${index}__Width" name="Books[${index}].Width" />
                                        <span class="text-danger" data-valmsg-for="Books[${index}].Width" data-valmsg-replace="true"></span>
                                    </div>
                                    <button type="button" class="btn btn-danger" onclick="removeBookForm(${index})">Remove</button>
                                </div>`;
                booksContainer.insertAdjacentHTML('beforeend', newBookForm);
            });

        function removeBookForm(index) {
            var bookForm = document.getElementById(`book-form-${index}`);
            bookForm.remove();
        }


    </script>

}
